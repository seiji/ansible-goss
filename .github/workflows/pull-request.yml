name: "pull-request"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    branches:
      - main

env:
  IMAGE_NAME: ansible-goss
  IMAGE_TAG: localbuild/ansible-goss
jobs:
  lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2
      - name: Lint
        run: make lint
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    needs: lint
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-buildx-action@v1
      - uses: docker/build-push-action@v2
        with:
          tags: ${{ env.IMAGE_TAG }}:latest
          push: false
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Save image
        run: docker save -o /tmp/${{ env.IMAGE_NAME }}.tar ${{ env.IMAGE_TAG }}:latest
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ env.IMAGE_NAME }}
          path: /tmp/${{ env.IMAGE_NAME }}.tar
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    needs: [lint, build]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: ${{ env.IMAGE_NAME }}
          path: /tmp
      - name: Load image
        run: docker load --input /tmp/${{ env.IMAGE_NAME }}.tar
      - name: Run test
        run: make test-jnit
      - name: Upload test report
        uses: mikepenz/action-junit-report@v2
        with:
          report_paths: 'goss-validate.xml'
          require_tests: true
          fail_on_failure: true
  scan:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    needs: [build]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: ${{ env.IMAGE_NAME }}
          path: /tmp
      - name: Load image
        run: docker load --input /tmp/${{ env.IMAGE_NAME }}.tar
      - uses: anchore/scan-action@v3
        with:
          image: "${{ env.IMAGE_TAG }}:latest"
          acs-report-enable: true
      - uses: github/codeql-action/upload-sarif@v1
        if: ${{ always() }}
        with:
          sarif_file: results.sarif
